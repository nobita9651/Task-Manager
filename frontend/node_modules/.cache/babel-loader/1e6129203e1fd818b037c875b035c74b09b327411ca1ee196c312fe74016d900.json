{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhi\\\\Downloads\\\\test\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../services/api\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  useEffect(() => {\n    if (id) {\n      const fetchTask = async () => {\n        const res = await axios.get(`/api/tasks/${id}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        });\n        setTitle(res.data.title);\n        setDescription(res.data.description);\n        setCompleted(res.data.completed);\n      };\n      fetchTask();\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const task = {\n      title,\n      description,\n      completed\n    };\n    try {\n      if (id) {\n        await axios.put(`/api/tasks/${id}`, task, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        });\n      } else {\n        await axios.post(\"/api/tasks\", task, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        });\n      }\n      navigate(\"/tasks\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: completed,\n        onChange: e => setCompleted(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: id ? \"Update Task\" : \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"xYqRKL3iJwsTrRKtw22i772Qs34=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","TaskForm","_s","id","navigate","title","setTitle","description","setDescription","completed","setCompleted","fetchTask","res","get","headers","Authorization","localStorage","getItem","data","handleSubmit","e","preventDefault","task","put","post","err","console","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","checked","_c","$RefreshReg$"],"sources":["C:/Users/Abhi/Downloads/test/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../services/api\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst TaskForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchTask = async () => {\r\n        const res = await axios.get(`/api/tasks/${id}`, {\r\n          headers: { Authorization: localStorage.getItem(\"token\") },\r\n        });\r\n        setTitle(res.data.title);\r\n        setDescription(res.data.description);\r\n        setCompleted(res.data.completed);\r\n      };\r\n      fetchTask();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const task = { title, description, completed };\r\n    try {\r\n      if (id) {\r\n        await axios.put(`/api/tasks/${id}`, task, {\r\n          headers: { Authorization: localStorage.getItem(\"token\") },\r\n        });\r\n      } else {\r\n        await axios.post(\"/api/tasks\", task, {\r\n          headers: { Authorization: localStorage.getItem(\"token\") },\r\n        });\r\n      }\r\n      navigate(\"/tasks\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Description</label>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Completed</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={(e) => setCompleted(e.target.checked)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">{id ? \"Update Task\" : \"Create Task\"}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}