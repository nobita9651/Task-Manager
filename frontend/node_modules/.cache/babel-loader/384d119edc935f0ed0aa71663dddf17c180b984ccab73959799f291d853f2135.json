{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhi\\\\Downloads\\\\test\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../services/api\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const task = {\n      title: \"Task Title\",\n      description: \"Task Description\",\n      completed: false\n    };\n    try {\n      const response = await axios.post(\"/api/tasks\", task);\n      console.log(\"Response:\", response.data);\n      // Handle successful response\n    } catch (error) {\n      console.error(\"handleSubmit Error:\", error);\n      if (error.response.status === 401) {\n        setError(\"Authorization denied. Please login.\"); // Handle unauthorized error\n        // Optionally, redirect to login page or handle unauthorized state\n      } else {\n        setError(\"An error occurred while processing your request.\");\n      }\n    }\n  };\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  useEffect(() => {\n    if (id) {\n      const fetchTask = async () => {\n        const res = await axios.get(`/api/tasks/${id}`, {\n          headers: {\n            Authorization: localStorage.getItem(\"token\")\n          }\n        });\n        setTitle(res.data.title);\n        setDescription(res.data.description);\n        setCompleted(res.data.completed);\n      };\n      fetchTask();\n    }\n  }, [id]);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const task = { title, description, completed };\n  //   try {\n  //     if (id) {\n  //       await axios.put(`/api/tasks/${id}`, task, {\n  //         headers: { Authorization: localStorage.getItem(\"token\") },\n  //       });\n  //     } else {\n  //       await axios.post(\"/api/tasks\", task, {\n  //         headers: { Authorization: localStorage.getItem(\"token\") },\n  //       });\n  //     }\n  //     navigate(\"/tasks\");\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: completed,\n        onChange: e => setCompleted(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: id ? \"Update Task\" : \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"KIYGVtPfdzq7zcoYTLigNPw9eDg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","TaskForm","_s","error","setError","handleSubmit","e","preventDefault","task","title","description","completed","response","post","console","log","data","status","id","navigate","setTitle","setDescription","setCompleted","fetchTask","res","get","headers","Authorization","localStorage","getItem","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","checked","_c","$RefreshReg$"],"sources":["C:/Users/Abhi/Downloads/test/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../services/api\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst TaskForm = () => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const task = {\r\n      title: \"Task Title\",\r\n      description: \"Task Description\",\r\n      completed: false,\r\n    };\r\n    try {\r\n      const response = await axios.post(\"/api/tasks\", task);\r\n      console.log(\"Response:\", response.data);\r\n      // Handle successful response\r\n    } catch (error) {\r\n      console.error(\"handleSubmit Error:\", error);\r\n      if (error.response.status === 401) {\r\n        setError(\"Authorization denied. Please login.\"); // Handle unauthorized error\r\n        // Optionally, redirect to login page or handle unauthorized state\r\n      } else {\r\n        setError(\"An error occurred while processing your request.\");\r\n      }\r\n    }\r\n  };\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchTask = async () => {\r\n        const res = await axios.get(`/api/tasks/${id}`, {\r\n          headers: { Authorization: localStorage.getItem(\"token\") },\r\n        });\r\n        setTitle(res.data.title);\r\n        setDescription(res.data.description);\r\n        setCompleted(res.data.completed);\r\n      };\r\n      fetchTask();\r\n    }\r\n  }, [id]);\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  //   const task = { title, description, completed };\r\n  //   try {\r\n  //     if (id) {\r\n  //       await axios.put(`/api/tasks/${id}`, task, {\r\n  //         headers: { Authorization: localStorage.getItem(\"token\") },\r\n  //       });\r\n  //     } else {\r\n  //       await axios.post(\"/api/tasks\", task, {\r\n  //         headers: { Authorization: localStorage.getItem(\"token\") },\r\n  //       });\r\n  //     }\r\n  //     navigate(\"/tasks\");\r\n  //   } catch (err) {\r\n  //     console.error(err);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Description</label>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Completed</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={(e) => setCompleted(e.target.checked)}\r\n        />\r\n      </div>\r\n      {error && <p>Error: {error}</p>}\r\n      <button type=\"submit\">{id ? \"Update Task\" : \"Create Task\"}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}